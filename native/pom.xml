<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>JVMagic</artifactId>
        <groupId>date.willnot.amy.jvmagic</groupId>
        <version>0.0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>jvmagic-native</artifactId>

    <packaging>so</packaging>

    <dependencies>
        <dependency>
            <groupId>date.willnot.amy.jvmagic</groupId>
            <artifactId>jvmagic-java</artifactId>
            <version>0.0.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>1.0-alpha-8</version>
                <extensions>true</extensions>
                <configuration>
                    <!--  trigger javah -->
                    <javahOS>linux</javahOS>

                    <compilerProvider>generic-classic</compilerProvider>
                    <compilerExecutable>gcc</compilerExecutable>

                    <linkerExecutable>gcc</linkerExecutable>
                    <sources>
                        <source>
                            <directory>src/main/native</directory>
                            <fileNames>
                                <fileName>jvmagic.c</fileName>
                            </fileNames>
                        </source>
                    </sources>

                    <compilerStartOptions>
                        <compilerStartOption>-fPIC</compilerStartOption>
                    </compilerStartOptions>

                    <linkerStartOptions>
                        <linkerStartOption>-shared</linkerStartOption>
                    </linkerStartOptions>
                    <javahSearchJNIFromDependencies>true</javahSearchJNIFromDependencies>

                    <!--linkerOutputDirectory>${project.build.directory}</linkerOutputDirectory>
                    <linkerFinalName>libjniExampleNative</linkerFinalName-->

                </configuration>

                <executions>
                    <execution>
                        <id>javah</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <javahOS>linux</javahOS>
                            <javahProvider>default</javahProvider>
                            <javahOutputDirectory>${project.build.directory}/custom-javah</javahOutputDirectory>
                            <workingDirectory>${basedir}</workingDirectory>
                            <javahOutputFileName>jvmagic.h</javahOutputFileName>
                            <javahClassNames>
                                <javahClassName>date.willnot.amy.jvmagic.JVMagic</javahClassName>
                            </javahClassNames>
                        </configuration>
                        <goals>
                            <goal>javah</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-Djava.library.path=${project.build.directory}</argument>
                    </arguments>
                    <mainClass>date.willnot.amy.jvmagic.JVMagic</mainClass>
                </configuration>
            </plugin -->
        </plugins>
    </build>
</project>